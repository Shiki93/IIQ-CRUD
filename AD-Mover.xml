<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>

  <!-- Template para los emails automaticos -->
  <EmailTemplate name="Manager_Transfer">
    <Body>
      The following user: $identityName has had a change in manager.
      Old Manager: $oldManagerName
      New Manager: $newManagerName
    </Body>
    <Subject>Manager transfer completed for: $identityName</Subject>
  </EmailTemplate>

  <EmailTemplate name="Department_Transfer">
    <Body>
      The following user: $identityName has had a change in department.
      Previous department: $oldDepartmentName
      New Department: $newDepartmentName
    </Body>
    <Subject>Department transfer completed for: $identityName</Subject>
  </EmailTemplate>

  <EmailTemplate name="StatusChange">
    <Body>
      The following user: $identityName has had a change in employment status.

      $reason

    </Body>
    <Subject>Status transfer completed for: $identityName</Subject>
  </EmailTemplate>

  <!--QuickLink-->
  <ImportAction name="merge">
    <Configuration name="SystemConfiguration">
      <Attributes>
        <Map>
          <entry key='quickLinkCategories'>
            <value>
              <List>
                <QuickLinkCategory name="Custom" messageKey="quicklink_category_custom" enabled="true" icon="quickLinkCategoryCustom"/>
              </List>
            </value>
          </entry>
          <entry key="helpDeskQuickLinks">
            <value>
              <List>
                <QuickLink name="Mover" action="workflow" category="Custom" messageKey="Mover Workflow">
                  <Attributes>
                    <Map>
                      <entry key="workflowName" value="Mover"/>
                      <entry key="workflowSuccess" value="Starting request..."/>
                      <entry key="launcher"/>
                    </Map>
                  </Attributes>
                </QuickLink>
              </List>
            </value>
          </entry>
        </Map>
      </Attributes>
    </Configuration>
  </ImportAction>

  <Workflow explicitTransitions="true" libraries="Identity" name="Mover" type="IdentityLifecycle">
    <Variable input="true" name="trigger"/>
    <Variable input="true" name="event" transient="true"/>
    <Variable input="true" name="identityName"/>
    <Variable name="oldManagerEmail"/>
    <Variable name="oldManagerName"/>
    <Variable name="newManagerEmail"/>
    <Variable name="newManagerName"/>

    <Step icon="Start" name="Start">
      <Transition to="Process User"/>
    </Step>

    <Step icon="Message" name="Process User">
      <Script>
        <Source>
          import sailpoint.object.*;

          String identityFullname = event.getIdentityFullName();
          Identity oldManager = (null != event.getOldObject()) ? event.getOldObject().getManager() : null;
          Identity newManager = (null != event.getObject()) ? event.getObject().getManager() : null;
          String oldManagerName = (null != oldManager) ? oldManager.getDisplayableName() : null;
          String oldManagerEmail = (null != oldManager) ? oldManager.getEmail() : null;
          String newManagerName = (null != newManager) ? newManager.getDisplayableName() : null;
          String newManagerEmail= (null != newManager) ? newManager.getEmail() : null;
          wfcontext.setVariable("oldManagerName",oldManagerName); 
          wfcontext.setVariable("oldManagerEmail",oldManagerEmail); 
          wfcontext.setVariable("newManagerName",newManagerName); 
          wfcontext.setVariable("newManagerEmail",newManagerEmail); 

          System.out.println(identityFullname + " changed managers from " + oldManagerName + " to " + newManagerName);
        </Source>
      </Script>
      <Transition to="NotifyManagers"/>
    </Step>

    <Step action="call:sendEmail" icon="Email" name="NotifyManagers">
      <Arg name="template" value="Manager_Transfer"/>
      <Arg name="to" value="string:$(newManagerEmail),$(oldManagerEmail)"/>
      <Arg name="from" value="administrator@demoexample.com"/>
      <Transition to="Stop"/>
    </Step>

    <Step icon="Stop" name="Stop"/>
  </Workflow>

  <Workflow  explicitTransitions="true" libraries="Identity" name="Prov-StatusChange" type="IdentityLifecycle">
    <Variable input="true" name="trigger"/>
    <Variable input="true" name="event" transient="true"/>
    <Variable input="true" name="identityName"/>
    <Variable input="true" name="identityEmail" initializer="script:context.getObjectByName(Identity.class,identityName).getEmail();"/>
    <Variable input="true" name="reason" initializer="script:event.getCause()"/>

    <Step icon="Start" name="Start">
      <Transition to="Process user"/>
    </Step>

    <Step icon="Message" name="Process user">
      <Script>
        <Source>
          import sailpoint.object.*;
          String identityFullname = event.getIdentityFullName();
        </Source>
      </Script>
      <Transition to="Refresh Identity"/>
    </Step>

    <Step icon="Task" action="call:refreshIdentity" name="Refresh Identity">
      <Arg name="identityName" value="ref:identityName"/>
      <Arg name="correlateEntitlements" value="string:true"/>
      <Arg name="provision" value="string:true"/>
      <Transition to="Notify"/>
    </Step>

    <Step action="call:sendEmail" icon="Email" name="Notify">
      <Arg name="template" value="StatusChange"/>
      <Arg name="to" value="ref:identityName"/>
      <Arg name="from" value="administrator@demoexample.com"/>
      <Arg name="reason" value="ref:reason"/>
      <Transition to="Stop"/>
    </Step>
  
    <Step icon="Stop" name="Stop"/>
  </Workflow>
</sailpoint>