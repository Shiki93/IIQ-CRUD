<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>

  <ImportAction name="merge">
    <Configuration name="SystemConfiguration">
      <Attributes>
        <Map>
          <entry key="managerQuickLinks">
            <value>
              <List>
                <QuickLink name="ManagerTransfer" action="workflow" enabled="true" messageKey="ManagerTransfer" category="Custom">
                  <Attributes>
                    <Map>
                      <entry key="workflowName" value="ManagerTransfer" />
                      <entry key="workflowSuccess" value="Update process started..." />
                      <entry key="manager">
                        <value>
                          <Script>
                            <Source>
                              if(currentUser.getManager() == null){
                                return "spadmin";
                              }
                              else{
                                return currentUser.getManager().getName();
                              }
                            </Source>
                          </Script>
                        </value>
                      </entry>

                      <entry key="managerEmail">
                        <value>
                          <Script>
                            <Source>
                              if(currentUser.getManager() == null){
                                return "spadmin@example.com";
                              }
                              else{
                                return currentUser.getManager().getEmail();
                              }
                            </Source>
                          </Script>
                        </value>
                      </entry>
                    </Map>
                  </Attributes>
                </QuickLink>
              </List>
            </value>
          </entry>
        </Map>
      </Attributes>
    </Configuration>
  </ImportAction>

  <Workflow  explicitTransitions="true" libraries="Identity" name="ManagerTransfer" type="LCM">
    <!-- input variables from quicklink -->
    <Variable input="true" name="launcher"/>
    <Variable input="true" name="currentUserName"/>
    <Variable input="true" name="quickLinkIdentityId"/>
    <Variable input="true" initializer="string:true" name="trace"/>

    <!-- internal variables -->
    <Variable name="identityName" initializer="script:context.getObjectById(Identity.class,quickLinkIdentityId).getName()"/>

    <Variable name="plan"/>
    <Variable input="true" name="event"/>
    <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName"/>
    <Variable initializer="AccountsRequest" input="true" name="flow"/>
    <Variable name="identityRequestId"/>
    <Variable initializer="manager" input="true" name="fallbackApprover"/>
    <Variable name="project"/>
    <Variable editable="true" initializer="false" name="optimisticProvisioning"/>
    <Variable editable="true" initializer="true" name="foregroundProvisioning"/>
    <Variable name="identityRequestId" output="true"/>
    <Variable initializer="LCM" input="true" name="source"/>
    <Variable name="cart" output="true"/>
    <Variable name="newEmail"/>
    <Variable name="newDepartment"/>
    <Variable name="confPass"/>


    <Variable input="true" name="identityObject" initializer="script:context.getObjectByName(Identity.class,identityName);"/>
    <Variable input="true" name="identityPass" initializer="script:identityObject.getPassword();"/>
    <Variable input="true" name="identityEmail" initializer="script:identityObject.getEmail();"/>
    <Variable input="true" name="managerIdentity" initializer="script:identityObject.getManager().getName();"/>
    <Variable input="true" name="identityFirstName" initializer="script:identityObject.getFirstname();"/>
    <Variable input="true" name="identityLastName" initializer="script:identityObject.getLastname();"/>
    <Variable input="true" name="identityDepartment" initializer='script:identityObject.getAttribute("department");'/>

    <Step icon="Start" name="Start" posX="50" posY="50">
      <Transition to="Display Form"/>
    </Step>

    <Step icon="Message" name="Display Form" posX="100" posY="50">
      <Approval owner="spadmin" send='identityName'>
        <Arg name='workItemDescription' value='Process change user: $(identityName)'/>
        <Arg name="workItemRequester" value="ref:identityName"/>
        <Arg name="workItemNotificationTemplate" value="MoverEmployeeManager"/>
        <Arg name="workItemType" value="ManualAction"/>

        <Arg name="identityPass" value="ref:identityPass"/>
        <Arg name="identityFirstName" value="ref:identityFirstName"/>
        <Arg name="identityLastName" value="ref:identityLastName"/>
        <Arg name="identityEmail" value="ref:identityEmail"/>
        <Arg name="managerIdentity" value="ref:managerIdentity"/>
        <Arg name="identityDepartment" value="ref:identityDepartment"/>
        <Arg name="identityDisplayName" value="ref:identityDisplayName"/>

        <Form name="UserUpdate">
          <Section name='userUpdate' type='text' label='Instructions'>
            <Field name='Directions' value='Update to employee: $(identityName)'/>
          </Section>

          <Section type="datable" label="Login Information">
            <Field displayName="Login Name" name="sAMAccountName" value="$(identityName)" required="true"/>

            <Field displayName="Password" name="password" reviewRequired="true" type="secret" required="true" value="$(identityPass)"/>
            <Field displayName="Password Confirmation" name="confPass" reviewRequired="true" type="secret" required="true" value="$(identityPass)">
              <ValidationScript>
                <Source>

                  String pw = password;
                  String cPw = confPass;
                  if((pw == null &amp;&amp; cPw != null) || (pw != null &amp;&amp; cPw == null) || (pw != null &amp;&amp; !pw.equals(cPw))){
                    return "Error, la contrase√±a debe coincidir";
                  }
                  else{
                    return null;
                  }
                </Source>
              </ValidationScript>
            </Field>
          </Section>

          <Section type="datable" label="Account Details">
            <Field displayName="First Name" name="firstName" type="String" value="$(identityFirstName)"/>
            <Field displayName="Last Name" name="sn" type="String" value="$(identityLastName)"/>
            <Field displayName="Email" name="mail" type="String" value="$(identityEmail)" required="true"/>


            <Field displayName="Manager" filterString='managerStatus == true &amp;&amp; links.application.name == "AD Connector"' name="manager" type="sailpoint.object.Identity" value="$(managerIdentity)"/>

            <Field displayName="Department" name="department" type="String" value="$(identityDepartment)"/>

          </Section>

          <Button label='Submit' action='next'/>
          <Button label='Cancel' action='cancel'/>
        </Form>
        <Return name="sAMAccountName" to="identityName"/>
        <Return name="password"       to="identityPass"/>
        <Return name="firstName"      to="identityFirstName"/>
        <Return name="sn"             to="identityLastName"/>
        <Return name="mail"           to="newEmail"/>
        <Return name="manager"        to="manager"/>
        <Return name="department"     to="newDepartment"/>
        <Return name="confPass"       to="confPass"/>

      </Approval>
      <Transition to="Create Plan"/>
    </Step>

    <Step icon="Task" name="Create Plan" resultVariable="plan" posX="150" posY="50">
      <Script>
        <Source>
          import sailpoint.object.ProvisioningPlan;
          import sailpoint.object.ProvisioningPlan.AccountRequest;
          import sailpoint.object.ProvisioningPlan.AttributeRequest;
          import java.util.List;
          import java.util.ArrayList;

          ProvisioningPlan plan = new ProvisioningPlan();
          List accreqs = new ArrayList();

          AccountRequest acctReq = new AccountRequest();
          acctReq.setOperation(AccountRequest.Operation.Modify);
          acctReq.setApplication("AD Connector");
          acctReq.add(new AttributeRequest("sAMAccountName",identityName));
          String manFirst = context.getObjectById(Identity.class,manager).getFirstname();
          String manLast = context.getObjectById(Identity.class,manager).getLastname();
          String ma = "CN=" + manFirst + " " + manLast + ",CN=Users,DC=ad_training,DC=net";
          acctReq.add(new AttributeRequest("manager",ma));
          acctReq.add(new AttributeRequest("mail",newEmail));
          acctReq.add(new AttributeRequest("department",newDepartment));
          acctReq.setNativeIdentity("CN=" + identityFirstName + " " + identityLastName +  ",CN=Users,DC=ad_training,DC=net");
          accreqs.add(acctReq);

          plan.setAccountRequests(accreqs);
          plan.setIdentity(identityObject);
          return plan;
        </Source>
      </Script>
      <Transition to="Initialize"/>
    </Step>

    <Step icon="Task" name="Initialize" posX="600" posY="50">
      <Arg name="formTemplate" value="Identity Update"/>
      <Arg name="identityName" value="ref:identityName"/>
      <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
      <Arg name="launcher" value="ref:launcher"/>
      <Arg name="optimisticProvisioning" value="ref:optimisticProvisioning"/>
      <Arg name="plan" value="ref:plan"/>
      <Arg name="priority" value="ref:workItemPriority"/>
      <Arg name="policyScheme" value="none"/>
      <Arg name="source" value="ref:source"/>
      <Arg name="trace" value="ref:trace"/>
      <Arg name="flow" value="ref:flow"/>
      <Return name="project" to="project"/>
      <Return name="approvalSet" to="cart"/>
      <Return name="identityRequestId" to="identityRequestId"/>
      <Return name="policyViolations" to="policyViolations"/>

      <WorkflowRef>
        <Reference class="sailpoint.object.Workflow" name="Identity Request Initialize"/>
      </WorkflowRef>
      <Transition to="Provision"/>
  </Step>

    <Step icon="Task" name="Provision" posX="800" posY="50">
      <Arg name="fallbackApprover" value="ref:fallbackApprover"/>
      <Arg name="foregroundProvisioning" value="ref:foregroundProvisioning"/>
      <Arg name="formTemplate" value="Identity Update"/>
      <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
      <Arg name="identityName" value="ref:identityName"/>
      <Arg name="launcher" value="ref:launcher"/>
      <Arg name="manualActionsEmailTemplate" value="Pending Manual Change"/>
      <Arg name="optimisticProvisioning" value="ref:optimisticProvisioning"/>
      <Arg name="project" value="ref:project"/>
      <Arg name="policyScheme" value="none"/>
      <Arg name="trace" value="ref:trace"/>
      <Return name="project" to="project"/>
      <WorkflowRef>
        <Reference class="sailpoint.object.Workflow" name="Identity Request Provision"/>
      </WorkflowRef>
      <Transition to="Finalize"/>
    </Step>

    <Step catches="complete" icon="Task" name="Finalize" posX="900" posY="50">
      <Arg name="approvalSet" value="ref:cart"/>
      <Arg name="project" value="ref:project"/>
      <Arg name="trace" value="ref:trace"/>
      <WorkflowRef>
        <Reference class="sailpoint.object.Workflow" name="Identity Request Finalize"/>
      </WorkflowRef>
      <Transition to="Refresh Identity"/>
    </Step>

    <Step icon="Task" action="call:refreshIdentity" name="Refresh Identity" posX="215" posY="250">
      <Arg name="identityName" value="ref:identityName"/>
      <Arg name="correlateEntitlements" value="string:true"/>
      <Arg name="provision" value="string:true"/>
      <Transition to="end"/>
    </Step>

    <Step icon="Stop" name="end" posX="400" posY="50"/>
  </Workflow>
</sailpoint>
