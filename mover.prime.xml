<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE sailpoint PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<sailpoint>

  <!--QuickLink-->
  <ImportAction name="merge">
    <Configuration name="SystemConfiguration">
      <Attributes>
        <Map>
          <entry key='quickLinkCategories'>
            <value>
              <List>
                <QuickLinkCategory name="Manager" messageKey="quicklink_category_manager" enabled="true" icon="quickLinkCategoryManager"/>
              </List>
            </value>
          </entry>
          <entry key="managerQuickLinks">
            <value>
              <List>
                <QuickLink name="Mover" action="workflow" category="Manager" messageKey="ManagerTransfer">
                  <Attributes>
                    <Map>
                      <entry key="workflowName" value="ManagerTransfer"/>
                      <entry key="workflowSuccess" value="Starting request..."/>
                      <entry key="launcher"/>
                    </Map>
                  </Attributes>
                </QuickLink>
              </List>
            </value>
          </entry>
        </Map>
      </Attributes>
    </Configuration>
  </ImportAction>

  <Workflow  explicitTransitions="true" libraries="Identity" name="ManagerTransfer" type="LCM">
    
  <!-- input variables from quicklink -->
    <Variable input="true" name="launcher"/>
    <Variable input="true" name="currentUserName"/>
    <Variable input="true" name="quickLinkIdentityId"/>
    <Variable input="true" name="quickLinkIdentityIds"/>
    <Variable input="true" initializer="string:true" name="trace"/>
    <Variable input="true" initializer="string:false" name="transient"/>

    <!-- internal variables -->
    <Variable name="identityName" initializer="script:context.getObjectById(Identity.class,quickLinkIdentityId).getName()"/>
    <Variable name="request"/>
    <Variable name="comments"/>
    <Variable name="plan"/>
    <Variable name="identityRequestId"/>
    <Variable name="counter" initializer="script:quickLinkIdentityIds.size();" input="true"/>
    <!-- <Variable input="true" name="trigger"/> -->
  <Variable input="true" name="event"/>
  <Variable initializer="script:(identityDisplayName != void) ? identityDisplayName : resolveDisplayName(identityName)" input="true" name="identityDisplayName"/>
  <Variable input="true" name="identityEmail" initializer="script:context.getObjectByName(Identity.class,identityName).getEmail();"/>
  <Variable initializer="AccountsRequest" input="true" name="flow"/>
  <Variable name="plan"/>
  <Variable editable="true" initializer="false" name="optimisticProvisioning"/>
  <Variable editable="true" initializer="true" name="foregroundProvisioning"/>
  <Variable initializer="spadmin" input="true" name="fallbackApprover"/>
  <Variable initializer="LCM" input="true" name="source"/>
  <Variable initializer="true" input="true" name="trace"/>
  <Variable name="project"/>
  <Variable name="identityRequestId" output="true"/>
  <Variable name="ADConnectoraccess"/>
  <Variable name="cart" output="true"/>
  <Variable name="passwd"/>
  <Variable name="identityObject">
    <Script>
      <Source>
        System.out.println("Initializing Workflow variables for IdentityObject");
        Identity identityObject = context.getObjectByName(Identity.class, identityName);
        return identityObject;
      </Source>
    </Script>
  </Variable>
  <Variable name="status">
    <Script>
      <Source>
        import java.lang.String;
        String stat = identityObject.getAttribute("status");
        if (stat != null) {
          return identityObject.getAttribute("status");
        }
        else{
          return "";
        }
      </Source>
    </Script>
  </Variable>
  <Variable name="manager">
    <Script>
      <Source>
        Identity managerIdentity = identityObject.getManager();
        if (null != managerIdentity) {
          return managerIdentity.getName();
        }
        else {
          return "spadmin";
        }
      </Source>
    </Script>
  </Variable>

    <Step icon="Start" name="Start" posX="50" posY="50">
      <Transition to="Fork"/>
    </Step>

    <Step icon="Message" name="Fork" posX="150" posY="50">
      <Transition to="ManagerForm"/>
    </Step>

    <Step icon="Message" name="ManagerForm" posX="300" posY="50" >
      <Approval owner='ref:manager' send='identityName' return='ADConnectoraccess'>
        <Arg name='workItemDescription' value='Process new user: $(identityName)'/>
        <Arg name="workItemRequester" value="ref:identityName"/>
      <Arg name="workItemNotificationTemplate" value="JoinerEmployeeManager"/>
      <Arg name="workItemType" value="ManualAction"/>

      <Form name='Manager-Joiner-Workflow-Form' >
        <Attributes>
          <Map>
            <entry key="pageTitle" value='Process User'/>
          </Map>
        </Attributes>

        <Section name='userInstructions' type='text' label='Instructions'>
          <Field name='Directions' value='A new employee: $(identityName) is requesting access to AD'/>
        </Section>

        <Section type="datatable" label='UserName'>
          <Field displayName="Employee Name" name="identityName"/>
        </Section>

        <Section label='Applications'>
          <Field name='ADConnectoraccess' displayName='AD Access Required' type='boolean' value='false'/>
        </Section>

        <Button label='Submit' action='next'/>
        <Button label='Cancel' action='cancel'/>
      </Form>
    </Approval>
    <Transition to="Sleep"/>
  </Step>

  <Step icon="Task" name="Sleep" wait="-1" posX="400" posY="50">
    <Transition to="Create Birthright Plan"/>
    </Step>

    <Step icon="Task" name="Create Birthright Plan" resultVariable="plan" posX="500" posY="50">
      <Script>
        <Source>
          import sailpoint.object.ProvisioningPlan;
          import sailpoint.object.ProvisioningPlan.AccountRequest;
          import sailpoint.object.ProvisioningPlan.AttributeRequest;
          import java.util.List;
          import java.util.ArrayList;
          import sailpoint.api.PasswordGenerator;
          import sailpoint.object.PasswordPolicy;

          ProvisioningPlan plan = new ProvisioningPlan();
          List accreqs = new ArrayList();
                    
          // update AD account
          AccountRequest acctReq = new AccountRequest();
          acctReq.setOperation(ProvisioningPlan.AccountRequest.Operation.Modify);
          acctReq.setApplication("AD Connector");
          accreqs.add(acctReq);

          plan.setAccountRequests(accreqs);
          plan.setIdentity(identityObject);
          //plan.setRequester(launcher);
          System.out.println("Joiner Workflow Plan = " + plan.toXml());
          return plan;
      </Source>
    </Script>
    <Transition to="Build Modify Plan"/>
  </Step>

  <Step icon="Task" action="call:buildEventPlan" resultVariable="plan" name="Build Modify Plan" posX="150" posY="50">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="op" value="Modify"/>
    <Transition to='Initialize'/>
  </Step>

  <Step icon="Task" name="Initialize" posX="600" posY="50">
      <Arg name="formTemplate" value="Identity Update"/>
      <Arg name="identityName" value="ref:identityName"/>
      <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
      <Arg name="launcher" value="ref:launcher"/>
      <Arg name="optimisticProvisioning" value="ref:optimisticProvisioning"/>
      <Arg name="plan" value="ref:plan"/>
      <Arg name="priority" value="ref:workItemPriority"/>
      <Arg name="policyScheme" value="none"/>
      <Arg name="source" value="ref:source"/>
      <Arg name="trace" value="ref:trace"/>
      <Arg name="flow" value="ref:flow"/>
      <Return name="project" to="project"/>
      <Return name="approvalSet" to="cart"/>
      <Return name="identityRequestId" to="identityRequestId"/>
      <Return name="policyViolations" to="policyViolations"/>

      <WorkflowRef>
        <Reference class="sailpoint.object.Workflow" name="Identity Request Initialize"/>
      </WorkflowRef>
      <Transition to="DebugProject"/>
  </Step>

  <Step icon="Message" name="DebugProject" posX="700" posY="50">
    <Script>
      <Source>
        import sailpoint.object.ProvisioningProject;
        System.out.println("Project = " + project.toXml());
      </Source>
    </Script>
    <Transition to="Provision"/>
  </Step>

  <Step icon="Task" name="Provision" posX="800" posY="50">
      <Arg name="fallbackApprover" value="ref:fallbackApprover"/>
      <Arg name="foregroundProvisioning" value="ref:foregroundProvisioning"/>
      <Arg name="formTemplate" value="Identity Update"/>
      <Arg name="identityDisplayName" value="ref:identityDisplayName"/>
      <Arg name="identityName" value="ref:identityName"/>
      <Arg name="launcher" value="ref:launcher"/>
      <Arg name="manualActionsEmailTemplate" value="Pending Manual Change"/>
      <Arg name="optimisticProvisioning" value="ref:optimisticProvisioning"/>
      <Arg name="project" value="ref:project"/>
      <Arg name="policyScheme" value="none"/>
      <Arg name="trace" value="ref:trace"/>
      <Return name="project" to="project"/>
      <WorkflowRef>
        <Reference class="sailpoint.object.Workflow" name="Identity Request Provision"/>
      </WorkflowRef>
      <Transition to="Finalize"/>
  </Step>

  <Step catches="complete" icon="Task" name="Finalize" posX="900" posY="50">
    <Arg name="approvalSet" value="ref:cart"/>
    <Arg name="project" value="ref:project"/>
    <Arg name="trace" value="ref:trace"/>
    <WorkflowRef>
      <Reference class="sailpoint.object.Workflow" name="Identity Request Finalize"/>
    </WorkflowRef>
    <Transition to="Refresh Identity"/>
  </Step>

  <Step icon="Task" action="call:refreshIdentity" name="Refresh Identity" posX="215" posY="250">
    <Arg name="identityName" value="ref:identityName"/>
    <Arg name="correlateEntitlements" value="string:true"/>
    <Arg name="provision" value="string:true"/>
    <Transition to="end"/>
  </Step>
    <Step icon="Stop" name="end" posX="550" posY="50"/>
  </Workflow>
</sailpoint>
